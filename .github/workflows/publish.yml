name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger when pushing v* tags (e.g. v0.4.0)
  release:
    types: [published]  # Trigger when creating GitHub Release
  workflow_dispatch:  # Allow manual trigger
    inputs:
      publish_to_pypi:
        description: 'Publish to PyPI (not just TestPyPI)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    env:
      PYTHONIOENCODING: utf-8
      PYTHONUTF8: 1

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=depx

    - name: Test CLI commands
      run: |
        depx --version
        depx --help

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-test:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip-existing: true

  publish-pypi:
    needs: [build, publish-test]
    runs-on: ubuntu-latest
    # Trigger PyPI publish for: 1) GitHub Release, 2) Manual workflow with PyPI option, 3) Tags starting with 'v' and containing 'release'
    if: |
      (github.event_name == 'release' && github.event.action == 'published') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_pypi == 'true') ||
      (github.event_name == 'push' && contains(github.ref, 'refs/tags/') && contains(github.ref, 'release'))
    environment:
      name: pypi
      url: https://pypi.org/p/depx

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}